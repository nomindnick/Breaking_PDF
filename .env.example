# PDF Splitter API Environment Configuration
# Copy this file to .env and update values for your environment

# ================================
# API Settings
# ================================
API_API_TITLE="PDF Splitter API"
API_API_DESCRIPTION="API for intelligent PDF document splitting"
API_API_VERSION="1.0.0"
API_API_HOST="0.0.0.0"
API_API_PORT=8000
API_API_WORKERS=4

# ================================
# CORS Settings
# ================================
# Comma-separated list of allowed origins
API_CORS_ORIGINS="http://localhost:3000,http://localhost:8000,https://your-frontend.com"
API_CORS_ALLOW_CREDENTIALS=true
API_CORS_ALLOW_METHODS="*"
API_CORS_ALLOW_HEADERS="*"

# ================================
# File Upload Settings
# ================================
API_UPLOAD_DIR="./uploads"
API_OUTPUT_DIR="./output"
# Max upload size in bytes (100MB default)
API_MAX_UPLOAD_SIZE=104857600
API_CHUNK_SIZE=1048576

# ================================
# Session Settings
# ================================
# Session timeout in seconds (24 hours default)
API_SESSION_TIMEOUT=86400
API_SESSION_DB_PATH="./sessions.db"
# Cleanup interval in seconds (1 hour default)
API_CLEANUP_INTERVAL=3600

# ================================
# Processing Settings
# ================================
API_MAX_CONCURRENT_PROCESSES=4
# Process timeout in seconds (5 minutes default)
API_PROCESS_TIMEOUT=300

# ================================
# Security Settings (REQUIRED FOR PRODUCTION)
# ================================
# IMPORTANT: Generate secure random keys for production
API_SECRET_KEY="your-secure-secret-key-minimum-32-characters-long"
API_JWT_SECRET_KEY="your-secure-jwt-secret-key-minimum-32-characters-long"
API_JWT_ALGORITHM="HS256"
API_JWT_EXPIRATION_MINUTES=60
API_API_KEY_HEADER="X-API-Key"
API_REQUIRE_API_KEY=false
API_API_KEY_ENABLED=false

# ================================
# WebSocket Settings
# ================================
API_WEBSOCKET_URL="ws://localhost:8000"
API_WEBSOCKET_HEARTBEAT_INTERVAL=30
API_WEBSOCKET_MAX_CONNECTIONS_PER_SESSION=10
API_WEBSOCKET_MAX_TOTAL_CONNECTIONS=1000
API_REQUIRE_WEBSOCKET_AUTH=false
API_WEBSOCKET_TOKEN_EXPIRY=3600

# ================================
# Logging Settings
# ================================
API_LOG_LEVEL="INFO"
API_LOG_FILE="./logs/api.log"
API_LOG_FORMAT="%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# ================================
# Development Settings
# ================================
API_DEBUG=false
API_RELOAD=false

# ================================
# Rate Limiting Settings
# ================================
API_RATE_LIMIT_ENABLED=true
# Requests per minute
API_RATE_LIMIT_DEFAULT=60
# Uploads per 5 minutes
API_RATE_LIMIT_UPLOAD=10
# Downloads per hour
API_RATE_LIMIT_DOWNLOAD=100

# ================================
# Monitoring Settings
# ================================
API_METRICS_ENABLED=true
API_METRICS_PORT=9090
API_PROMETHEUS_MULTIPROC_DIR="/tmp/prometheus"

# ================================
# Download Settings
# ================================
# Download token expiry in seconds (1 hour default)
API_DOWNLOAD_TOKEN_EXPIRY=3600
API_DOWNLOAD_CHUNK_SIZE=1048576

# ================================
# Health Check Settings
# ================================
API_HEALTH_CHECK_INTERVAL=60
API_HEALTH_CHECK_TIMEOUT=10

# ================================
# Core PDF Processing Settings
# ================================
# These are for the underlying PDF processing modules
OCR_ENGINE="paddleocr"
PADDLE_ENABLE_MKLDNN=false
DEFAULT_DPI=300
LLM_CACHE_ENABLED=true
LLM_CACHE_PATH="~/.cache/pdf_splitter/llm_cache.db"

# ================================
# Legacy Settings (for compatibility)
# ================================
# These are kept for backward compatibility with existing scripts
DEBUG=false
LOG_LEVEL=INFO
HOST=0.0.0.0
PORT=8000
WORKERS=4
SECRET_KEY=your-secret-key-here
CORS_ORIGINS=http://localhost:3000,http://localhost:8000

# ================================
# Production Security Notes
# ================================
# 1. Generate strong secret keys:
#    python -c "import secrets; print(secrets.token_urlsafe(32))"
# 2. Set API_REQUIRE_API_KEY=true for production
# 3. Set API_REQUIRE_WEBSOCKET_AUTH=true for production
# 4. Update CORS origins to match your frontend domains
# 5. Use HTTPS in production (update WEBSOCKET_URL to wss://)
# 6. Set appropriate rate limits for your use case
# 7. Enable structured logging for production monitoring
