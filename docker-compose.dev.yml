version: '3.8'

services:
  pdf-splitter-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: pdf-splitter:dev
    container_name: pdf-splitter-api-dev
    restart: unless-stopped
    ports:
      - "8000:8000"     # API port
      - "5678:5678"     # Python debugger port
    environment:
      # Development settings
      - DEBUG=true
      - RELOAD=true
      - LOG_LEVEL=DEBUG
      - API_WORKERS=1

      # API Configuration
      - API_TITLE=PDF Splitter API (Dev)
      - API_VERSION=1.0.0-dev
      - API_HOST=0.0.0.0
      - API_PORT=8000

      # Security (relaxed for development)
      - API_KEY_ENABLED=false
      - SECRET_KEY=dev-secret-key-not-for-production
      - JWT_SECRET_KEY=dev-jwt-secret-not-for-production
      - CORS_ALLOWED_ORIGINS=*

      # File Storage
      - UPLOAD_DIR=/data/uploads
      - OUTPUT_DIR=/data/outputs
      - MAX_UPLOAD_SIZE=524288000  # 500MB for testing

      # Session Management
      - SESSION_DB_PATH=/data/sessions/sessions.db
      - SESSION_TIMEOUT=86400

      # Processing
      - MAX_CONCURRENT_PROCESSES=2
      - PROCESS_TIMEOUT=600  # 10 minutes for debugging

      # OCR Configuration
      - OCR_ENGINE=paddleocr
      - PADDLE_ENABLE_MKLDNN=false
      - DEFAULT_DPI=300

      # LLM Configuration
      - LLM_PROVIDER=transformers
      - LLM_CACHE_ENABLED=true
      - LLM_CACHE_PATH=/data/cache/llm_cache.db

      # Performance
      - OMP_THREAD_LIMIT=1

      # Rate Limiting (disabled for development)
      - RATE_LIMIT_ENABLED=false

      # Development specific
      - PYTHONDEBUG=1
      - PYTHONPATH=/app

    volumes:
      # Mount source code for hot-reloading
      - ./pdf_splitter:/app/pdf_splitter
      - ./tests:/app/tests
      - ./scripts:/app/scripts

      # Persistent data volumes
      - dev-uploads:/data/uploads
      - dev-outputs:/data/outputs
      - dev-sessions:/data/sessions
      - dev-cache:/data/cache
      - dev-logs:/data/logs

      # Mount config files
      - ./.env.dev:/app/.env:ro
      - ./pyproject.toml:/app/pyproject.toml:ro
      - ./pytest.ini:/app/pytest.ini:ro

    command: >
      bash -c "
        echo 'Starting PDF Splitter API in development mode...' &&
        echo 'API will be available at http://localhost:8000' &&
        echo 'API docs at http://localhost:8000/api/docs' &&
        echo 'Health check at http://localhost:8000/api/health' &&
        uvicorn pdf_splitter.api.main:app \
          --host 0.0.0.0 \
          --port 8000 \
          --reload \
          --reload-dir pdf_splitter \
          --log-level debug
      "

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis for development (optional)
  redis-dev:
    image: redis:7-alpine
    container_name: pdf-splitter-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-dev-data:/data
    command: >
      redis-server
      --appendonly yes
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --loglevel debug

  # Adminer for database inspection (optional)
  adminer:
    image: adminer:latest
    container_name: pdf-splitter-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=sqlite
    depends_on:
      - pdf-splitter-dev

volumes:
  dev-uploads:
    driver: local
  dev-outputs:
    driver: local
  dev-sessions:
    driver: local
  dev-cache:
    driver: local
  dev-logs:
    driver: local
  redis-dev-data:
    driver: local

networks:
  default:
    name: pdf-splitter-dev-network
