worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Security
    server_tokens off;
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/json application/javascript application/xml+rss
               application/rss+xml application/atom+xml image/svg+xml;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=download:10m rate=100r/m;

    # Upstream backend
    upstream pdf_splitter_backend {
        least_conn;
        server pdf-splitter-api:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Redirect HTTP to HTTPS (uncomment in production)
    # server {
    #     listen 80;
    #     server_name api.pdfsplitter.com;
    #     return 301 https://$server_name$request_uri;
    # }

    # Main server block
    server {
        listen 80;
        # listen 443 ssl http2;  # Uncomment for HTTPS
        server_name api.pdfsplitter.com localhost;

        # SSL configuration (uncomment for HTTPS)
        # ssl_certificate /etc/nginx/ssl/cert.pem;
        # ssl_certificate_key /etc/nginx/ssl/key.pem;
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers HIGH:!aNULL:!MD5;
        # ssl_prefer_server_ciphers on;
        # ssl_session_cache shared:SSL:10m;
        # ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # API endpoints
        location /api/ {
            proxy_pass http://pdf_splitter_backend;
            proxy_http_version 1.1;

            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;

            # Rate limiting by endpoint
            location /api/upload {
                limit_req zone=upload burst=5 nodelay;
                proxy_pass http://pdf_splitter_backend;
            }

            location /api/download {
                limit_req zone=download burst=20 nodelay;
                proxy_pass http://pdf_splitter_backend;
            }

            # Default rate limit for other endpoints
            limit_req zone=api burst=10 nodelay;
        }

        # WebSocket support
        location ~ ^/ws/ {
            proxy_pass http://pdf_splitter_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket timeouts
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # Health check endpoint (no rate limiting)
        location /api/health {
            proxy_pass http://pdf_splitter_backend;
            access_log off;
        }

        # Metrics endpoint (internal only)
        location /api/metrics {
            proxy_pass http://pdf_splitter_backend;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            allow 127.0.0.1;
            deny all;
        }

        # Documentation
        location /api/docs {
            proxy_pass http://pdf_splitter_backend;
        }

        location /api/redoc {
            proxy_pass http://pdf_splitter_backend;
        }

        location /api/openapi.json {
            proxy_pass http://pdf_splitter_backend;
        }

        # Error pages
        error_page 404 /404.json;
        location = /404.json {
            add_header Content-Type application/json;
            return 404 '{"error": {"type": "not_found", "message": "The requested resource was not found"}}';
        }

        error_page 500 502 503 504 /50x.json;
        location = /50x.json {
            add_header Content-Type application/json;
            return 500 '{"error": {"type": "server_error", "message": "An internal server error occurred"}}';
        }
    }
}
