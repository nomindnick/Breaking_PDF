version: '3.8'

# Production-specific overrides for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  pdf-splitter-api:
    image: pdf-splitter:${VERSION:-latest}
    restart: always
    environment:
      - DEBUG=false
      - LOG_LEVEL=WARNING
      - API_WORKERS=8
      - MAX_CONCURRENT_PROCESSES=8
    deploy:
      resources:
        limits:
          cpus: '8'
          memory: 8G
        reservations:
          cpus: '4'
          memory: 4G
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

  nginx:
    restart: always
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"

  redis:
    restart: always
    command: >
      redis-server
      --appendonly yes
      --maxmemory 2gb
      --maxmemory-policy allkeys-lru
      --requirepass ${REDIS_PASSWORD}

  # PostgreSQL for production (instead of SQLite)
  postgres:
    image: postgres:15-alpine
    container_name: pdf-splitter-postgres
    restart: always
    environment:
      - POSTGRES_DB=pdf_splitter
      - POSTGRES_USER=pdf_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pdf_user"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backup service
  backup:
    image: postgres:15-alpine
    container_name: pdf-splitter-backup
    restart: always
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=pdf_splitter
      - POSTGRES_USER=pdf_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM
    volumes:
      - ./backups:/backups
    command: >
      sh -c "while true; do
        pg_dump -h postgres -U pdf_user pdf_splitter | gzip > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql.gz;
        find /backups -name 'backup_*.sql.gz' -mtime +7 -delete;
        sleep 86400;
      done"
    depends_on:
      - postgres

volumes:
  postgres-data:
    driver: local
